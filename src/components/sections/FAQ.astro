---
import AccordionItem from "@components/ui/blocks/AccordionItem.astro";

const { title, faqs } = Astro.props;

interface Faq {
  question: string;
  answer: string;
}

interface FaqGroup {
  subTitle?: string;
  faqs: Faq[];
}

interface Props {
  title: string;
  faqs: FaqGroup;
}
---

<section
  class="mx-auto max-w-[85rem] px-4 py-6 sm:px-6 lg:px-8 lg:py-10 2xl:max-w-full"
>
  <div class="grid gap-10 md:grid-cols-5">
    <div class="md:col-span-2 mt-2 -mb-8">
      <div class="max-w-xs">
        <h1
          class="block text-balance text-3xl lg:text-4xl font-bold md:leading-tight"
        >
          <Fragment set:html={title} />
        </h1>
        <p class="mt-3 hidden text-neutral-700 md:block">
          {faqs.subTitle}
        </p>
      </div>
    </div>

    <div class="md:col-span-3">
      <div>
        {
          faqs.faqs.map((faq, _) => (
            <AccordionItem question={faq.question} answer={faq.answer} />
          ))
        }
      </div>
    </div>
  </div>
</section>

<script is:inline>
  document.addEventListener("DOMContentLoaded", () => {
    const allDetails = document.querySelectorAll(".details");

    allDetails.forEach((targetDetail) => {
      const question = targetDetail.querySelector(".summary-question");
      const answer = targetDetail.querySelector(".details-answer");

      question.addEventListener("click", () => {
        const isOpen = targetDetail.classList.contains("detail-open");

        allDetails.forEach((detail) => {
          detail.classList.remove("detail-open");
          detail.querySelector(".details-answer").style.maxHeight = "0px";
        });

        if (!isOpen) {
          targetDetail.classList.add("detail-open");
          answer.style.maxHeight = answer.scrollHeight + "px";
        }
      });
    });
  });
</script>
